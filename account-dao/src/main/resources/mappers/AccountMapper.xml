<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.egf.financial.account.mapper.AccountMapper">
  <resultMap id="BaseResultMap" type="com.egf.financial.account.entity.AccountEntity">
    <id column="account_id" jdbcType="INTEGER" property="accountId" />
    <result column="customer_id" jdbcType="VARCHAR" property="customerId" />
    <result column="account_no" jdbcType="VARCHAR" property="accountNo" />
    <result column="account_name" jdbcType="VARCHAR" property="accountName" />
    <result column="account_type" jdbcType="VARCHAR" property="accountType" />
    <result column="account_status" jdbcType="VARCHAR" property="accountStatus" />
    <result column="channel_id" jdbcType="VARCHAR" property="channelId" />
    <result column="trans_flow" jdbcType="VARCHAR" property="transFlow" />
    <result column="account_amount" jdbcType="DECIMAL" property="accountAmount" />
    <result column="available_amount" jdbcType="DECIMAL" property="availableAmount" />
    <result column="freezing_amount" jdbcType="DECIMAL" property="freezingAmount" />
    <result column="withdraw_amount" jdbcType="DECIMAL" property="withdrawAmount" />
    <result column="currency" jdbcType="VARCHAR" property="currency" />
    <result column="open_date" jdbcType="TIMESTAMP" property="openDate" />
    <result column="close_date" jdbcType="TIMESTAMP" property="closeDate" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    account_id, customer_id, account_no, account_name, account_type, account_status, 
    channel_id, trans_flow, account_amount, available_amount, freezing_amount, withdraw_amount, 
    currency, open_date, close_date, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from T_EGF_ACCOUNT
    where account_id = #{accountId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from T_EGF_ACCOUNT
    where account_id = #{accountId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="account_Id"
          parameterType="com.egf.financial.account.entity.AccountEntity">
    insert into T_EGF_ACCOUNT (account_id, customer_id, account_no, 
      account_name, account_type, account_status, 
      channel_id, trans_flow, account_amount, 
      available_amount, freezing_amount, withdraw_amount, 
      currency, open_date, close_date, 
      create_time, update_time)
    values (#{accountId,jdbcType=INTEGER}, #{customerId,jdbcType=VARCHAR}, #{accountNo,jdbcType=VARCHAR}, 
      #{accountName,jdbcType=VARCHAR}, #{accountType,jdbcType=VARCHAR}, #{accountStatus,jdbcType=VARCHAR}, 
      #{channelId,jdbcType=VARCHAR}, #{transFlow,jdbcType=VARCHAR}, #{accountAmount,jdbcType=DECIMAL}, 
      #{availableAmount,jdbcType=DECIMAL}, #{freezingAmount,jdbcType=DECIMAL}, #{withdrawAmount,jdbcType=DECIMAL}, 
      #{currency,jdbcType=VARCHAR}, #{openDate,jdbcType=TIMESTAMP}, #{closeDate,jdbcType=TIMESTAMP}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective"  useGeneratedKeys="true" keyProperty="account_id"
          parameterType="com.egf.financial.account.entity.AccountEntity">
    insert into T_EGF_ACCOUNT
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="accountId != null">
        account_id,
      </if>
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="accountNo != null">
        account_no,
      </if>
      <if test="accountName != null">
        account_name,
      </if>
      <if test="accountType != null">
        account_type,
      </if>
      <if test="accountStatus != null">
        account_status,
      </if>
      <if test="channelId != null">
        channel_id,
      </if>
      <if test="transFlow != null">
        trans_flow,
      </if>
      <if test="accountAmount != null">
        account_amount,
      </if>
      <if test="availableAmount != null">
        available_amount,
      </if>
      <if test="freezingAmount != null">
        freezing_amount,
      </if>
      <if test="withdrawAmount != null">
        withdraw_amount,
      </if>
      <if test="currency != null">
        currency,
      </if>
      <if test="openDate != null">
        open_date,
      </if>
      <if test="closeDate != null">
        close_date,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="accountId != null">
        #{accountId,jdbcType=INTEGER},
      </if>
      <if test="customerId != null">
        #{customerId,jdbcType=VARCHAR},
      </if>
      <if test="accountNo != null">
        #{accountNo,jdbcType=VARCHAR},
      </if>
      <if test="accountName != null">
        #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="accountType != null">
        #{accountType,jdbcType=VARCHAR},
      </if>
      <if test="accountStatus != null">
        #{accountStatus,jdbcType=VARCHAR},
      </if>
      <if test="channelId != null">
        #{channelId,jdbcType=VARCHAR},
      </if>
      <if test="transFlow != null">
        #{transFlow,jdbcType=VARCHAR},
      </if>
      <if test="accountAmount != null">
        #{accountAmount,jdbcType=DECIMAL},
      </if>
      <if test="availableAmount != null">
        #{availableAmount,jdbcType=DECIMAL},
      </if>
      <if test="freezingAmount != null">
        #{freezingAmount,jdbcType=DECIMAL},
      </if>
      <if test="withdrawAmount != null">
        #{withdrawAmount,jdbcType=DECIMAL},
      </if>
      <if test="currency != null">
        #{currency,jdbcType=VARCHAR},
      </if>
      <if test="openDate != null">
        #{openDate,jdbcType=TIMESTAMP},
      </if>
      <if test="closeDate != null">
        #{closeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.egf.financial.account.entity.AccountEntity">
    update T_EGF_ACCOUNT
    <set>
      <if test="customerId != null">
        customer_id = #{customerId,jdbcType=VARCHAR},
      </if>
      <if test="accountNo != null">
        account_no = #{accountNo,jdbcType=VARCHAR},
      </if>
      <if test="accountName != null">
        account_name = #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="accountType != null">
        account_type = #{accountType,jdbcType=VARCHAR},
      </if>
      <if test="accountStatus != null">
        account_status = #{accountStatus,jdbcType=VARCHAR},
      </if>
      <if test="channelId != null">
        channel_id = #{channelId,jdbcType=VARCHAR},
      </if>
      <if test="transFlow != null">
        trans_flow = #{transFlow,jdbcType=VARCHAR},
      </if>
      <if test="accountAmount != null">
        account_amount = #{accountAmount,jdbcType=DECIMAL},
      </if>
      <if test="availableAmount != null">
        available_amount = #{availableAmount,jdbcType=DECIMAL},
      </if>
      <if test="freezingAmount != null">
        freezing_amount = #{freezingAmount,jdbcType=DECIMAL},
      </if>
      <if test="withdrawAmount != null">
        withdraw_amount = #{withdrawAmount,jdbcType=DECIMAL},
      </if>
      <if test="currency != null">
        currency = #{currency,jdbcType=VARCHAR},
      </if>
      <if test="openDate != null">
        open_date = #{openDate,jdbcType=TIMESTAMP},
      </if>
      <if test="closeDate != null">
        close_date = #{closeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where account_id = #{accountId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.egf.financial.account.entity.AccountEntity">
    update T_EGF_ACCOUNT
    set customer_id = #{customerId,jdbcType=VARCHAR},
      account_no = #{accountNo,jdbcType=VARCHAR},
      account_name = #{accountName,jdbcType=VARCHAR},
      account_type = #{accountType,jdbcType=VARCHAR},
      account_status = #{accountStatus,jdbcType=VARCHAR},
      channel_id = #{channelId,jdbcType=VARCHAR},
      trans_flow = #{transFlow,jdbcType=VARCHAR},
      account_amount = #{accountAmount,jdbcType=DECIMAL},
      available_amount = #{availableAmount,jdbcType=DECIMAL},
      freezing_amount = #{freezingAmount,jdbcType=DECIMAL},
      withdraw_amount = #{withdrawAmount,jdbcType=DECIMAL},
      currency = #{currency,jdbcType=VARCHAR},
      open_date = #{openDate,jdbcType=TIMESTAMP},
      close_date = #{closeDate,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where account_id = #{accountId,jdbcType=INTEGER}
  </update>
</mapper>