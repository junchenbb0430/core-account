#设置版本环境
spring.profiles.active = @spring.active@
server.port=9999
server.servlet.context-path=/coreAccount

#设置spring-sharding-jdbc配置
spring.shardingsphere.datasource.names=coreaccount0,coreaccount1
#设置库1
spring.shardingsphere.datasource.coreaccount0.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.coreaccount0.drive-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.coreaccount0.jdbc-url=jdbc:mysql://bj-cdb-065ysbyi.sql.tencentcdb.com:/?useSSL=false
spring.shardingsphere.datasource.coreaccount0.username=
spring.shardingsphere.datasource.coreaccount0.password=

#设置库2
spring.shardingsphere.datasource.coreaccount1.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.coreaccount1.drive-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.coreaccount1.jdbc-url=jdbc:mysql://cdb-faokt8de.bj.tencentcdb.com:/?useSSL=false
spring.shardingsphere.datasource.coreaccount1.username=
spring.shardingsphere.datasource.coreaccount1.password=
# 配置sql
spring.shardingsphere.props.sql.show=true

####设置分库规则####
# 基于行表达式分库 InlineShardingStrategyConfiguration
spring.shardingsphere.sharding.default-database-strategy.inline.sharding-column=customer_id
spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression=coreaccount$->{customer_id % 2}

####设置分表分片规则#####
###设置t_egf_account的分表配置
spring.shardingsphere.sharding.tables.t_egf_account.actual-data-nodes=coreaccount$->{0..1}.t_egf_account_$->{0..1}
spring.shardingsphere.sharding.tables.t_egf_account.table-strategy.inline.sharding-column=customer_id
spring.shardingsphere.sharding.tables.t_egf_account.table-strategy.inline.algorithm-expression=t_egf_account_$->{customer_id % 2}
spring.shardingsphere.sharding.tables.t_egf_account.key-generator.column=account_id
spring.shardingsphere.sharding.tables.t_egf_account.key-generator.type=SNOWFLAKE
spring.shardingsphere.sharding.tables.t_egf_account.key-generator.props.worker.id=123

###设置t_egf_account_detail_flow的分表配置
spring.shardingsphere.sharding.tables.t_egf_account_detail_flow.actual-data-nodes=coreaccount$->{0..1}.t_egf_account_detail_flow_$->{0..1}
spring.shardingsphere.sharding.tables.t_egf_account_detail_flow.table-strategy.inline.sharding-column=customer_id
spring.shardingsphere.sharding.tables.t_egf_account_detail_flow.table-strategy.inline.algorithm-expression=t_egf_account_detail_flow_$->{customer_id % 2 }
spring.shardingsphere.sharding.tables.t_egf_account_detail_flow.key-generator.column=account_detail_id
spring.shardingsphere.sharding.tables.t_egf_account_detail_flow.key-generator.type=SNOWFLAKE
spring.shardingsphere.sharding.tables.t_egf_account_detail_flow.key-generator.props.worker.id=123

#设置绑定表和广播表
#sping.shardingsphere.sharding.binding-tables=t_egf_account,t_egf_account_detail_flow
#spring.shardingsphere.sharding.broadcast-tables=t_egf_account_check_detail,t_egf_account_detail_freezing

##配置mapper文件
mybatis.mapper-locations=classpath:mappers/*.xml



#配置日志
logging.config=classpath:local/logback-spring.xml
